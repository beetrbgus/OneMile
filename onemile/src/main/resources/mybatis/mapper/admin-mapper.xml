<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="admin">
	
	<!-- 승인 등록 -->
	<insert id="regApproveMember"  parameterType="ApproveDTO">
		insert into approve values(#{approveNo},#{memberNo})
	</insert>
	<delete id="deniedApproveMember" parameterType="int">
		delete from approve where member_no=#{memerNo} 
	</delete>
	<update id="approveMember"  parameterType="ApproveDTO">
		update member set APPROVE = 'Y' where member_no=#{memerNo}
	</update>
	
	<!-- 승인 전 회원 목록 가져오기 -->
	<select id="notMemberList" resultType="MemberListVO" parameterType="map">
	select * from (
			select rownum rn, TMP.* from (
				select * from member  
					<where>
						and hiddenyn = 'N' 
						and approve = 'N'
						<if test="search != '' and keyword != ''">
							and instr(${search}, #{keyword}) > 0
						</if>
					</where>
				order by member_no asc
			)TMP
		) where rn between ${startRow} and ${endRow}
	</select>
	<!-- 회원 목록 가져오기 -->
	<select id="approveMemberList" resultType="MemberListVO" parameterType="map">
	select * from (
			select rownum rn, TMP.* from (
				select * from member where hiddenyn = 'N' and approve = 'Y'
					<if test="search != '' and keyword != ''">
							and instr(${search}, #{keyword}) > 0
						</if>
				order by member_no asc
			)TMP
		) where rn between ${startRow} and ${endRow}
	</select>
	
	<!-- 탈퇴 회원 목록 가져오기 -->
	<select id="extiMemberList" resultType="ExitMemberVO" parameterType="map">
		select * from (
			select rownum rn, TMP.* from (
		select * from member where hiddenyn = 'Y' and exitdate != null order by member_no asc
					)TMP
		) where rn between ${startRow} and ${endRow}
	</select>
	
	<select id="hideMemberList" resultType="ExitMemberVO" parameterType="map">
		select * from (
			select rownum rn, TMP.* from (
				select * from member where hiddenyn = 'Y' and exitdate = null order by member_no asc
			)TMP
		) where rn between ${startRow} and ${endRow}
	</select>
	
	<!-- 회원 멤버십 목록 가져오기 -->
	<select id="membershipList" resultType="List" parameterType="map">
		select * from (
			select rownum rn, TMP.* from (
		select
			m.member_no, m.email, m.nick, m.phone, m.birth,
			m.grade, m.joindate, m.mbti, m.intro, m.corona, m.popular,
			m.nickmodi, m.gender, msb.buy_time, msb.buy_endtime,
			msb.total_amount, msb.status, msp.msp_product
		from member m 
			left join msb on m.member_no = msb.member_no 
			left join msp on msb.msp_no = msp.msp_no 
		where
			m.hiddenyn = 'N' and m.approve = 'Y'
		order by
			m.member_no asc
			
				)TMP
		) where rn between ${startRow} and ${endRow}
	</select>
	
	<select id="memberCount" resultType="int">
		select count(*) from member
	</select>
	<select id="manGenderCount" resultType="int">
		select count(*) from member where gender = '남자'
	</select>
	<select id="womanGenderCount" resultType="int">
		select count(*) from member where gender = '여자'
	</select>
	<select id="membershipActiveMemberCount" resultType="int">
		select count(*) from msb where hiddenyn = 'Y'
	</select>
	
	<select id="ageDistribution" parameterType="map" resultType="int">
		select count(*) from member where 
		to_number((substr(to_char(sysdate , 'YYYYMMDD'), 0, 4))) - to_number((substr(to_char(birth, 'YYYYMMDD'), 0, 4))) between ${startAge} and ${endAge}
	</select>
	
	<select id="locationDistribution" parameterType="String" resultType="int">
		select count(m.detailaddress) from social S inner join map M on S.map_no = M.map_no 
		where substr(m.detailaddress, 0, 2) = #{locationName}
	</select>
</mapper>
